name: Backend ESLint (controllers & DTOs)

on:
  pull_request:
    # Fire only when these files — or the workflow itself — change
    paths:
      - 'backend/src/**/*.controller.ts'
      - 'backend/src/**/*.dto.ts'
      - '.github/workflows/backend-lint.yml'

permissions:
  contents: read
  pull-requests: write   # ⬅ needed for the comment step

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend   # stay inside backend/

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install deps
        run: npm ci --ignore-scripts

      # ── Run ESLint, capture text output, preserve exit code ──
      - name: Lint controllers & DTOs
        id: eslint
        shell: bash
        run: |
          set +e
          # Run ESLint with the built‑in “compact” formatter
          RAW="$(npx eslint "src/**/*.controller.ts" "src/**/*.dto.ts" \
                --format compact --max-warnings=0)"
          CODE=$?

          # 1) drop the runner path   2) add a leading dash for markdown bullets
          REPORT="$(printf '%s\n' "$RAW" \
                  | sed -E 's@.*/backend/src/@@' \
                  | sed -E 's@^@- @')"

          ERRORS=$(printf '%s\n' "$REPORT" | grep -c '^- ')
          echo "exit_code=$CODE"              >> "$GITHUB_OUTPUT"
          echo "report<<EOF"                  >> "$GITHUB_OUTPUT"
          echo "### ❌ $ERRORS ESLint errors" >> "$GITHUB_OUTPUT"
          echo                                >> "$GITHUB_OUTPUT"
          echo "$REPORT"                      >> "$GITHUB_OUTPUT"
          echo "EOF"                          >> "$GITHUB_OUTPUT"

      - name: PR summary comment
        if: steps.eslint.outputs.exit_code != '0'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 🚨 ESLint errors in `*.controller.ts` / `*.dto.ts`
            <details><summary>Click to expand</summary>

            ${{ steps.eslint.outputs.report }}

            </details>
          edit-mode: replace

      - name: PR summary comment
        if: steps.eslint.outputs.exit_code != '0'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.eslint.outputs.report }}
          edit-mode: replace

      # ── Create or update a single comment with the full report ──
      - name: Post / update PR comment
        if: steps.eslint.outputs.report != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 🚨 ESLint errors in `*.controller.ts` / `*.dto.ts`
            <details><summary>Click to expand</summary>

            ```text
            ${{ steps.eslint.outputs.report }}
            ```

            </details>
          edit-mode: replace   # keep just one comment

      # ── Fail the job if ESLint found errors ──
      - name: Fail if ESLint errored
        if: steps.eslint.outputs.exit_code != '0'
        run: exit 1
